{"version":3,"file":"static/js/811.76076e9a.chunk.js","mappings":"wQAEaA,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACdC,EAAAA,EAAAA,IAAU,sCAADC,OACQN,EAAO,aAC7CO,EAAAA,GACA,KAAD,EAHa,OAARN,EAAQC,EAAAM,KAAAN,EAAAO,OAAA,SAIPR,EAASS,MAAI,wBAAAR,EAAAS,OAAA,GAAAZ,EAAA,KACrB,gBANsBa,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,KCevB,EAdmB,SAAAd,GACjB,IAAAe,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAU1B,OARAI,EAAAA,EAAAA,YAAU,WACJrB,GACFL,EAAWK,GAASsB,MAAK,SAAArB,GACvBmB,GAAUG,EAAAA,EAAAA,GAAKtB,EAASuB,SAC1B,GAEJ,GAAG,CAACxB,IAEG,CAAEmB,QAAAA,EACX,E,SCYA,EAxBgB,WACd,IAAQnB,GAAYyB,EAAAA,EAAAA,MAAZzB,QACAmB,EAAYO,EAAW1B,GAAvBmB,QAER,OAAKA,EAEkB,IAAnBA,EAAQQ,QACHC,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAIVD,EAAAA,EAAAA,KAAA,MAAAC,SACGV,EAAQW,KAAI,SAAAC,GACX,OACEC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOE,UACXL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOG,YAFJH,EAAOE,OAKpB,OAfiBL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,cAkB1B,C,oBCjBA,IARgB,CAEdM,QAAS,CACPC,OAAQ,mBACRC,cACE,8N","sources":["services/MovieReviewApi.js","hook/UseReviews.js","components/Reviews.js","services/ApiOptions.js"],"sourcesContent":["import axios from 'axios';\nimport options from './ApiOptions';\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews `,\n    options\n  );\n  return response.data;\n};","import { useEffect, useState } from 'react';\nimport { getReviews } from 'services/MovieReviewApi';\n\nconst useReviews = movieId => {\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (movieId) {\n      getReviews(movieId).then(response => {\n        setReviews([...response.results]);\n      });\n    }\n  }, [movieId]);\n\n  return { reviews };\n};\n\nexport default useReviews;","import { useParams } from 'react-router-dom';\nimport useReviews from 'hook/UseReviews';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  if (!reviews) return <p>Loading...</p>;\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <li key={review.author}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Reviews;","const options = {\n  // method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5NGNjZGMwZDdmMmQ4NzRkZmUwYjgyMTgzZTE4ZTMyOSIsInN1YiI6IjY0NjVmZDdlYTUwNDZlMDBlNWI1MDBjOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.uQwgCh7Dwgcvue4ZCmBq70fD9FuC0cja1l53oOovpSo',\n  },\n};\nexport default options;"],"names":["getReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_context","prev","next","axios","concat","options","sent","abrupt","data","stop","_x","apply","arguments","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","then","_toConsumableArray","results","useParams","useReviews","length","_jsx","children","map","review","_jsxs","author","content","headers","accept","Authorization"],"sourceRoot":""}